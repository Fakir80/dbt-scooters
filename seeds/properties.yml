seeds:
  - name: "scooters"
    description: >
      Scooter models information and park statistics by model.
      Includes information about the manufacturing company.
      Data received from the service team and uploaded by Mark.
      Data is current as of summer 2023.
    config:
      delimiter: ","
    data_tests:
      - unique_key:
          columns: [ "company", "model", "hardware_id" ]
    columns:
      - name: "company"
        description: "Scooter company model name"
      - name: "model"
        description: "Scooter model name"
        data_tests: [ "unique_not_null" ]
      - name: "hardware_id"
        description: "scooter model id"
        data_tests: [ "unique_not_null" ]
      - name: "scooters"
        description: "Count of scooters"

  - name: "event_types"
    description: "{{ doc('event_types') }}"
    config:
      delimiter: ","
    columns:
      - name: "type_id"
        description: >
          An integer serving as a unique identifier for each event type.
          It is used in user event tables as a foreign key to link events to their descriptions
        data_tests: [ "unique_not_null" ]
      - name: "type"
        description: >
          A string describing the event type, enhancing the interpretability of event data
          by providing a human-readable label
        data_tests: [ "unique_not_null" ]

  - name: "age_groups"
    description: "Age groups to split users for analysis"
    columns:
      - name: "group"
        description: "Age group name for report"
        data_tests: [ "unique_not_null" ]
      - name: "age_start"
        description: "Start age of group"
        data_tests: [ "unique_not_null" ]
      - name: "age_end"
        description: "End age of group"
        data_tests: [ "unique_not_null" ]

  - name: "add_first_name_sex"
    description: "additional name_sex glossary"
    columns:
      - name: "first_name"
        description: "First name of user"
        data_tests: [ "unique_not_null" ]
      - name: "sex"
        description: "user gender"
        data_tests:
          - accepted_values:
              values: [ "M", "F" ]
